%YAML 1.2
---
# Author: Ivan Ortombina, teacher @ IIS Einaudi-Scarpa Montebelluna, Italy
# See http://www.sublimetext.com/docs/syntax.html
name: Assembly
file_extensions: [cs h]
scope: source.example-c
contexts:
  main:
    # Strings begin and end with quotes, and use backslashes as an escape
    # character
    - match: '"'
      scope: punctuation.definition.string.begin.example-c
      push: double_quoted_string

    # Comments begin with a '//' and finish at the end of the line
    - match: ';'
      scope: punctuation.definition.comment.example-c
      push: line_comment

    # Keywords are if, else for and while.
    # Note that blackslashes don't need to be escaped within single quoted
    # strings in YAML. When using single quoted strings, only single quotes
    # need to be escaped: this is done by using two single quotes next to each
    # other.
    - match: '\b(MOV|NOP|PUSH|POP|XCHG|IN|OUT|ADD|ADC|DAA|INC|SUB|SBB|CMP|NEG|DEC|DAS|MUL|IMUL|DIV|IDIV|CBW|CWD|AND|NOT|OR|TEST|XOR|RCL|RCR|ROL|ROR|SAL|SAR|SHL|SHR|CLC|CLD|CLI|CMC|STC|STD|STI|CALL|JMP|RET|JA|JAE|JB|JBE|JC|JCXZ|JE|JG|JGE|JL|JLE|JNC|JNE|JNO|JNS|JO|JS|JPE|JPO|LOOP|LOOPNE|OFFSET)\b'
      scope: keyword.control.example-c
    - match: '\b(mov|nop|push|pop|xchg|in|out|add|adc|daa|inc|sub|sbb|cmp|neg|dec|das|mul|imul|div|idiv|cbw|cwd|and|not|or|test|xor|rcl|rcr|rol|ror|sal|sar|shl|shr|clc|cld|cli|cmc|stc|std|sti|call|jmp|ret|ja|jae|jb|jbe|jc|jcxz|je|jg|jge|jl|jle|jnc|jne|jno|jns|jo|js|jpe|jpo|loop|loopne|offset)\b'
      scope: keyword.control.example-c

    # Numbers
    - match: '\b(-)?[0-9.]+\b'
      scope: constant.numeric.example-c
    - match: '0[xX][0-9a-fA-F]+'
      scope: constant.numeric.example-c

  double_quoted_string:
    - meta_scope: string.quoted.double.example-c
    - match: '\\.'
      scope: constant.character.escape.example-c
    - match: '"'
      scope: punctuation.definition.string.end.example-c
      pop: true

  line_comment:
    - meta_scope: comment.line.example-c
    - match: $
      pop: true
